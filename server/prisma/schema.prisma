// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id         Int        @id @default(autoincrement())
  username   String     @unique
  email      String     @unique
  password   String 

  name       String?
  avatar     String?
  banner     String?
  desc       String?

  createdAt  DateTime   @default(now())
  role       Role       @default(USER)
  posts      Posts[]

  followers  Follows[]  @relation("following")
  following  Follows[]  @relation("follower")    
  
  favorites  Likes[]
  saves      Saves[]
}

model Follows {
  follower     Users     @relation("follower", fields: [followerId], references: [id])
  followerId   Int
  following    Users     @relation("following", fields: [followingId], references: [id])
  followingId  Int

  createdAt    DateTime  @default(now())

  @@id([followerId, followingId])
}

model Posts {
  id           Int         @default(autoincrement()) @id
  createdAt    DateTime    @default(now())
  content      String?
  image        String?
  public       Boolean     @default(true)

  author       Users       @relation(fields: [authorId], references: [id])
  authorId     Int
  
  parent       Posts?    @relation("reply", fields: [parentId], references: [id])
  parentId     Int? 
  replies      Posts[]   @relation("reply")

  retweeting   Posts?      @relation("Retweet", fields: [retweetId], references: [id])
  retweetId    Int?         
  retweets     Posts[]     @relation("Retweet")

  favorites    Likes[]
  saves        Saves[]
  tags         PostTag[]
  
}

model Likes {
  user       Users     @relation(fields: [userId], references: [id])
  userId     Int
  post       Posts     @relation(fields: [postId], references: [id])
  postId     Int

  createdAt  DateTime  @default(now())

  @@id([userId, postId])
}

model Saves {
  user       Users     @relation(fields: [userId], references: [id])
  userId     Int
  post       Posts     @relation(fields: [postId], references: [id])
  postId     Int

  createdAt  DateTime  @default(now())

  @@id([userId, postId])
}

model Tags {
  id     String     @id

  posts  PostTag[]
}

model PostTag {
  post       Posts      @relation(fields: [postId], references: [id])
  postId     Int
  tag        Tags       @relation(fields: [tagId], references: [id])
  tagId      String
  
  createdAt  DateTime  @default(now())

  @@id([postId, tagId])
}

// model Retweets {
//   retweeter     Posts     @relation("retweeter", fields: [retweeterId], references: [id])
//   retweeterId   Int
//   retweeting    Posts     @relation("retweeting", fields: [retweetingId], references: [id])
//   retweetingId  Int

//   @@id([retweeterId, retweetingId])
// }

enum Role {
  USER
  ADMIN
}